//sidebar Dashboard
<div className={`${sidebarOpen ? 'w-64' : 'w-20'} bg-white shadow-md transition-all duration-300`}>
  <div className="p-4 flex items-center justify-between border-b">
    {sidebarOpen ? (
      <h2 className="text-xl font-semibold text-gray-800">Employees</h2>
    ) : (
      <FiUsers className="text-xl text-gray-800" />
    )}
    <button 
      onClick={() => setSidebarOpen(!sidebarOpen)}
      className="text-gray-500 hover:text-gray-700"
    >
      <FiMenu />
    </button>
  </div>

  <div 
  className={`p-3 flex items-center cursor-pointer hover:bg-gray-100 ${
    selectedEmployee === 'all' ? 'bg-blue-50 border-r-4 border-blue-500' : ''
  }`}
  onClick={() => setSelectedEmployee('all')}
>
  {/* <div className="flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center">
    <FiUsers className="text-gray-500" />
  </div> */}
  {/* {sidebarOpen && (
    <div className="ml-3 text-sm font-medium text-gray-700">All Employees</div>
  )} */}
</div>


  <div className="overflow-y-auto h-[calc(100%-60px)]">
    {employees.map(employee => {
      const logo = employee.company === 'Urbancode'
        ? urbancodeLogo
        : employee.company === 'Jobzenter'
        ? jobzenterLogo
        : null; 

      return (
        <div 
          key={employee._id}
          onClick={() => handleEmployeeClick(employee)}
          className={`p-3 flex items-center cursor-pointer hover:bg-gray-100 ${
            selectedEmployee?._id === employee._id ? 'bg-blue-50 border-r-4 border-blue-500' : ''
          }`}
        >
          <div className="flex-shrink-0 h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden">
            {logo ? (
              <img src={logo} alt={employee.company} className="h-6 w-6 object-contain" />
            ) : (
              <FiUser className="text-gray-500" />
            )}
          </div>
          {sidebarOpen && (
            <div className="ml-3 flex-1 overflow-hidden">
              <p className="text-sm font-medium text-gray-900 truncate">{employee.name}</p>
              <p className="text-xs text-gray-500 truncate">{employee.position}</p>
            </div>
          )}
          {sidebarOpen && <FiChevronRight className="text-gray-400" />}
          
        </div>
        
      );
    })}

    
  {/* Logout Button */}
  <div className="p-4 border-t border-gray-200">
    <button
      onClick={() => {
        localStorage.removeItem('token');
        navigate('/');
      }}
      className="flex items-center w-full text-sm text-red-600 hover:text-red-700 hover:bg-red-50 px-3 py-2 rounded-md"
    >
      <FiXCircle className="mr-2" />
      {sidebarOpen && 'Logout'}
    </button>
  </div>
  </div>
  
</div>